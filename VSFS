#!/usr/bin/env python3

import sys
import os

from copyin import *
from copyout import *
from list import *
from mkdir import *

from check_FS import *
from check_IF import *
from check_EF import *
from check_ID import *

# Print 'Invalid VSFS'
def invalid_VSFS():
    print("Invalid VSFS")

# Define variables
MIN_NUM_COMMAND = 3
MAX_NUM_COMMAND = 5

# Start VSFS program here
if (len(sys.argv) < MIN_NUM_COMMAND or len(sys.argv) > MAX_NUM_COMMAND):
    invalid_VSFS()
# VSFS list FS    
elif (sys.argv[1] == "list" and len(sys.argv) == 3):
    # Check if FS exists
    if(check_FS(sys.argv[2])):
        dirs = check_subdir(sys.argv[2])
        for dir in dirs:
            list(sys.argv[2], dir)
    else:
        invalid_VSFS()
# VSFS copyin FS EF IF        
elif (sys.argv[1] == "copyin" and len(sys.argv) == 5):
    if (check_FS(sys.argv[2]) and check_EF(sys.argv[1], sys.argv[3]) and check_IF(sys.argv[1], sys.argv[2], sys.argv[4])):
        copyin(sys.argv[2], sys.argv[3], sys.argv[4]) 
    else:
        invalid_VSFS()
# VSFS copyout FS IF EF
elif (sys.argv[1] == "copyout" and len(sys.argv) == 5):
    if (check_FS(sys.argv[2]) and check_IF(sys.argv[1], sys.argv[2], sys.argv[3]) and check_EF(sys.argv[1], sys.argv[4])):
        copyout(sys.argv[2], sys.argv[3], sys.argv[4])
    else:
        invalid_VSFS()
# VSFS mkdir FS ID   
elif (sys.argv[1] == "mkdir" and len(sys.argv) == 4):
    if (check_FS(sys.argv[2]) and check_ID(sys.argv[2], sys.argv[3])):
        mkdir(sys.argv[2], sys.argv[3])
    else:
        invalid_VSFS()
else:
    invalid_VSFS()
